{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhanush\\\\Downloads\\\\cinemate (5)\\\\cinemate\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/** @format */\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport MovieDetail from \"./pages/MovieDetail\";\nimport Recommendations from \"./pages/Recommendations\";\nimport GuessMovie from \"./pages/GuessMovie\";\nimport MovieTrivia from \"./pages/MovieTrivia\";\nimport UserPreferences from \"./pages/UserPreferences\";\nimport Login from \"./pages/Login\";\nimport { getCurrentUser, syncGenresFromTMDB } from \"./services/api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const appContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [genres, setGenres] = useState([]);\n  const [selectedGenres, setSelectedGenres] = useState([]);\n  const [favoriteMovies, setFavoriteMovies] = useState([]);\n  const [watchedMovies, setWatchedMovies] = useState([]);\n  const [userProfile, setUserProfile] = useState(null);\n  const [recommendations, setRecommendations] = useState([]);\n  const [noPreferences, setNoPreferences] = useState(false);\n  const contextValue = {\n    genres,\n    setGenres,\n    selectedGenres,\n    setSelectedGenres,\n    favoriteMovies,\n    setFavoriteMovies,\n    watchedMovies,\n    setWatchedMovies,\n    userProfile,\n    setUserProfile,\n    recommendations,\n    setRecommendations,\n    noPreferences,\n    setNoPreferences\n  };\n  const [user, setUser] = useState(getCurrentUser());\n  const [userPreferences, setUserPreferences] = useState({\n    favoriteGenres: [],\n    favoriteMovies: [],\n    watchedMovies: [],\n    requireAuth: false\n  });\n\n  // Sync genres from TMDB on app load\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        // Sync genres from TMDB API to database\n        await syncGenresFromTMDB();\n      } catch (error) {\n        console.error(\"Error syncing genres from TMDB:\", error);\n      }\n    };\n    initializeApp();\n  }, []);\n\n  // Check for user on app load\n  useEffect(() => {\n    const currentUser = getCurrentUser();\n    setUser(currentUser);\n  }, []);\n  const updateUserPreferences = newPreferences => {\n    setUserPreferences(prev => ({\n      ...prev,\n      ...newPreferences\n    }));\n  };\n  const handleUserChange = newUser => {\n    setUser(newUser);\n  };\n  return /*#__PURE__*/_jsxDEV(appContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          user: user,\n          handleUserChange: handleUserChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"app-content\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {\n                userPreferences: userPreferences\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movie/:id\",\n              element: /*#__PURE__*/_jsxDEV(MovieDetail, {\n                userPreferences: userPreferences,\n                updateUserPreferences: updateUserPreferences,\n                user: user\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/recommendations\",\n              element: /*#__PURE__*/_jsxDEV(Recommendations, {\n                userPreferences: userPreferences\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/guess-movie\",\n              element: /*#__PURE__*/_jsxDEV(GuessMovie, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/movie-trivia\",\n              element: /*#__PURE__*/_jsxDEV(MovieTrivia, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/preferences\",\n              element: /*#__PURE__*/_jsxDEV(UserPreferences, {\n                userPreferences: userPreferences,\n                updateUserPreferences: updateUserPreferences\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/login\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"Krfe9DZhzgKOhMAGIB4lqC8tgXs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","BrowserRouter","Router","Routes","Route","Navbar","Home","MovieDetail","Recommendations","GuessMovie","MovieTrivia","UserPreferences","Login","getCurrentUser","syncGenresFromTMDB","jsxDEV","_jsxDEV","appContext","App","_s","genres","setGenres","selectedGenres","setSelectedGenres","favoriteMovies","setFavoriteMovies","watchedMovies","setWatchedMovies","userProfile","setUserProfile","recommendations","setRecommendations","noPreferences","setNoPreferences","contextValue","user","setUser","userPreferences","setUserPreferences","favoriteGenres","requireAuth","initializeApp","error","console","currentUser","updateUserPreferences","newPreferences","prev","handleUserChange","newUser","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Dhanush/Downloads/cinemate (5)/cinemate/frontend/src/App.js"],"sourcesContent":["/** @format */\n\nimport React, { useState, useEffect, createContext } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./pages/Home\";\nimport MovieDetail from \"./pages/MovieDetail\";\nimport Recommendations from \"./pages/Recommendations\";\nimport GuessMovie from \"./pages/GuessMovie\";\nimport MovieTrivia from \"./pages/MovieTrivia\";\nimport UserPreferences from \"./pages/UserPreferences\";\nimport Login from \"./pages/Login\";\nimport { getCurrentUser, syncGenresFromTMDB } from \"./services/api\";\nimport \"./App.css\";\n\nexport const appContext = createContext();\nfunction App() {\n\tconst [genres, setGenres] = useState([]);\n\tconst [selectedGenres, setSelectedGenres] = useState([]);\n\tconst [favoriteMovies, setFavoriteMovies] = useState([]);\n\tconst [watchedMovies, setWatchedMovies] = useState([]);\n\tconst [userProfile, setUserProfile] = useState(null);\n\tconst [recommendations, setRecommendations] = useState([]);\n\tconst [noPreferences, setNoPreferences] = useState(false);\n\n\tconst contextValue = {\n\t\tgenres,\n\t\tsetGenres,\n\t\tselectedGenres,\n\t\tsetSelectedGenres,\n\t\tfavoriteMovies,\n\t\tsetFavoriteMovies,\n\t\twatchedMovies,\n\t\tsetWatchedMovies,\n\t\tuserProfile,\n\t\tsetUserProfile,\n\t\trecommendations,\n\t\tsetRecommendations,\n\t\tnoPreferences,\n\t\tsetNoPreferences,\n\t};\n\n\tconst [user, setUser] = useState(getCurrentUser());\n\tconst [userPreferences, setUserPreferences] = useState({\n\t\tfavoriteGenres: [],\n\t\tfavoriteMovies: [],\n\t\twatchedMovies: [],\n\t\trequireAuth: false,\n\t});\n\n\t// Sync genres from TMDB on app load\n\tuseEffect(() => {\n\t\tconst initializeApp = async () => {\n\t\t\ttry {\n\t\t\t\t// Sync genres from TMDB API to database\n\t\t\t\tawait syncGenresFromTMDB();\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error syncing genres from TMDB:\", error);\n\t\t\t}\n\t\t};\n\n\t\tinitializeApp();\n\t}, []);\n\n\t// Check for user on app load\n\tuseEffect(() => {\n\t\tconst currentUser = getCurrentUser();\n\t\tsetUser(currentUser);\n\t}, []);\n\n\tconst updateUserPreferences = (newPreferences) => {\n\t\tsetUserPreferences((prev) => ({\n\t\t\t...prev,\n\t\t\t...newPreferences,\n\t\t}));\n\t};\n\n\tconst handleUserChange = (newUser) => {\n\t\tsetUser(newUser);\n\t};\n\n\treturn (\n\t\t<appContext.Provider value={contextValue}>\n\t\t\t<Router>\n\t\t\t\t<div className='app'>\n\t\t\t\t\t<Navbar user={user} handleUserChange={handleUserChange} />\n\t\t\t\t\t<main className='app-content'>\n\t\t\t\t\t\t<Routes>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/'\n\t\t\t\t\t\t\t\telement={<Home userPreferences={userPreferences} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/movie/:id'\n\t\t\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t\t\t<MovieDetail\n\t\t\t\t\t\t\t\t\t\tuserPreferences={userPreferences}\n\t\t\t\t\t\t\t\t\t\tupdateUserPreferences={updateUserPreferences}\n\t\t\t\t\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/recommendations'\n\t\t\t\t\t\t\t\telement={<Recommendations userPreferences={userPreferences} />}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/guess-movie' element={<GuessMovie />} />\n\t\t\t\t\t\t\t<Route path='/movie-trivia' element={<MovieTrivia />} />\n\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\tpath='/preferences'\n\t\t\t\t\t\t\t\telement={\n\t\t\t\t\t\t\t\t\t<UserPreferences\n\t\t\t\t\t\t\t\t\t\tuserPreferences={userPreferences}\n\t\t\t\t\t\t\t\t\t\tupdateUserPreferences={updateUserPreferences}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Route path='/login' element={<Login />} />\n\t\t\t\t\t\t</Routes>\n\t\t\t\t\t</main>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</appContext.Provider>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}