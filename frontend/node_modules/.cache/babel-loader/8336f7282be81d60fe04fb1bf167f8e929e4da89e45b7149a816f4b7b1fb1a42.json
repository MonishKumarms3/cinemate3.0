{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhanush\\\\Downloads\\\\cinemate (5)\\\\cinemate\\\\frontend\\\\src\\\\components\\\\LoadingSpinner.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'medium',\n  message = \"Loading...\"\n}) => {\n  // Define spinner size based on the prop\n  let spinnerSize;\n  switch (size) {\n    case 'small':\n      spinnerSize = '30px';\n      break;\n    case 'large':\n      spinnerSize = '60px';\n      break;\n    case 'medium':\n    default:\n      spinnerSize = '40px';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        style: {\n          width: spinnerSize,\n          height: spinnerSize\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .loading-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          min-height: 200px;\n          width: 100%;\n        }\n        \n        .spinner-wrapper {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        \n        .spinner {\n          border: 4px solid rgba(3, 37, 65, 0.1);\n          border-radius: 50%;\n          border-top: 4px solid var(--accent);\n          animation: spin 1s linear infinite;\n        }\n        \n        .loading-message {\n          margin-top: 1rem;\n          color: var(--text-light);\n          font-weight: 500;\n        }\n        \n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","message","spinnerSize","className","children","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","jsx","_c","$RefreshReg$"],"sources":["C:/Users/Dhanush/Downloads/cinemate (5)/cinemate/frontend/src/components/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\n\nconst LoadingSpinner = ({ size = 'medium', message = \"Loading...\" }) => {\n  // Define spinner size based on the prop\n  let spinnerSize;\n  switch (size) {\n    case 'small':\n      spinnerSize = '30px';\n      break;\n    case 'large':\n      spinnerSize = '60px';\n      break;\n    case 'medium':\n    default:\n      spinnerSize = '40px';\n  }\n\n  return (\n    <div className=\"loading-container\">\n      <div className=\"spinner-wrapper\">\n        <div className=\"spinner\" style={{ width: spinnerSize, height: spinnerSize }}></div>\n        {message && <p className=\"loading-message\">{message}</p>}\n      </div>\n\n      <style jsx>{`\n        .loading-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          min-height: 200px;\n          width: 100%;\n        }\n        \n        .spinner-wrapper {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        \n        .spinner {\n          border: 4px solid rgba(3, 37, 65, 0.1);\n          border-radius: 50%;\n          border-top: 4px solid var(--accent);\n          animation: spin 1s linear infinite;\n        }\n        \n        .loading-message {\n          margin-top: 1rem;\n          color: var(--text-light);\n          font-weight: 500;\n        }\n        \n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,GAAG,QAAQ;EAAEC,OAAO,GAAG;AAAa,CAAC,KAAK;EACtE;EACA,IAAIC,WAAW;EACf,QAAQF,IAAI;IACV,KAAK,OAAO;MACVE,WAAW,GAAG,MAAM;MACpB;IACF,KAAK,OAAO;MACVA,WAAW,GAAG,MAAM;MACpB;IACF,KAAK,QAAQ;IACb;MACEA,WAAW,GAAG,MAAM;EACxB;EAEA,oBACEJ,OAAA;IAAKK,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCN,OAAA;MAAKK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BN,OAAA;QAAKK,SAAS,EAAC,SAAS;QAACE,KAAK,EAAE;UAAEC,KAAK,EAAEJ,WAAW;UAAEK,MAAM,EAAEL;QAAY;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAClFV,OAAO,iBAAIH,OAAA;QAAGK,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAEH;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAENb,OAAA;MAAOc,GAAG;MAAAR,QAAA,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACE,EAAA,GAzDId,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}